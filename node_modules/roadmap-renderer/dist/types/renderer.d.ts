export declare class Renderer {
    private svgRoot;
    private readonly fontFamily;
    private canvasRenderingContext2D;
    constructor(svgRoot: SVGElement, fontFamily: string);
    render(control: any, container: any): void;
    parseColor(color: any, defaultColor: any): string;
    parseFontProperties(control: any): {
        style: string;
        weight: string;
        size: string;
        family: string;
    };
    measureText(text: string, font: string): TextMetrics;
    drawRectangle(control: any, container: HTMLElement | undefined): void;
    addText(control: {
        properties: {
            text: string;
        };
        x: string;
        y: string;
        w: any;
        measuredW: any;
        measuredH: number;
    }, container: HTMLElement | undefined, textColor: string, align: string): void;
    TextArea(control: any, container: HTMLElement | undefined): void;
    Canvas(control: any, container: HTMLElement | undefined): void;
    Label(control: any, container: HTMLElement | undefined): void;
    TextInput(control: any, container: any): void;
    Arrow(control: any, container: any): void;
    Icon(control: any, container: any): void;
    HRule(control: any, container: any): void;
    __group__(control: any, container: any): void;
}
